#!/usr/bin/env python

import djangodeploy
from djangodeploy.config import load_config
from djangodeploy.template import replace_file_markers, copy_project_template
from optparse import OptionParser
import os

if __name__ == '__main__':
    parser = OptionParser()
    default_path = os.path.join(os.path.dirname(djangodeploy.__file__), 'default-template')
    parser.add_option("-t", "--template", dest="template", help="Directory to treat as a Django template", default=default_path)
    parser.set_usage('%prog [options] destination')
    options, args = parser.parse_args()
    if len(args) != 1:
        parser.print_help()
        os.sys.exit(1)
    else:
        source_directory = os.path.abspath(os.path.realpath(options.template))
        destination_directory = os.path.abspath(os.path.realpath(args[0]))
        if not os.path.exists(source_directory):
            parser.print_help()
            print '\nThe template directory does not exist.'
            os.sys.exit(1)

        if os.path.exists(destination_directory):
            parser.print_help()
            print '\nThe destination directory already exists.'
            os.sys.exit(1)

        replacements_dict = {}
        replacements = []
        try:
            load_config('django_deploy_config', source_directory, replacements_dict)
        except Exception, e:
            parser.print_help()
            print '\nError loading configuration: %s' % e
            os.sys.exit(1)
        else:
            replacements = [ (k, v, None) for k, v in replacements_dict.items() ]

        copy_project_template(source_directory, destination_directory)
        replace_file_markers(destination_directory, replacements)
